syntax = "proto3";

package node;

option go_package = "github.com/fr13n8/go-blockchain/node/proto/gen";

service NodeService {
  rpc Ping (PingRequest) returns (PingResponse) {}
  rpc GetBlocks (GetBlocksRequest) returns (GetBlocksResponse) {}
  rpc GetBlock (GetBlockRequest) returns (GetBlockResponse) {}
  rpc GetTransactions (GetTransactionsRequest) returns (GetTransactionsResponse) {}
  rpc GetTransaction (GetTransactionRequest) returns (GetTransactionResponse) {}
  rpc CreateTransaction (CreateTransactionRequest) returns (CreateTransactionResponse) {}
  rpc StartMining (StartMiningRequest) returns (StartMiningResponse) {}
  rpc StopMining (StopMiningRequest) returns (StopMiningResponse) {}
  rpc GetBalance (GetBalanceRequest) returns (GetBalanceResponse) {}
  rpc GetPeers (GetPeersRequest) returns (GetPeersResponse) {}
}

message GetPeersRequest {
  string message = 1;
}

message GetPeersResponse {
  repeated string peers = 1;
}

message CreateTransactionRequest {
  string recipient_address = 1;
  float  amount           = 2;
  string sender_address    = 3;
  string sender_public_key  = 4;
  string signature        = 5;
}

message CreateTransactionResponse {
  string transaction_id = 1;
}

message PingRequest {
  string message = 1;
}

message PingResponse {
  string message = 1;
}

message GetBlocksRequest {
  string message = 1;
}

message GetBlocksResponse {
  repeated string blocks = 1;
}

message GetBlockRequest {
  string hash = 1;
}

message GetTransactionsRequest {
  string message = 1;
}

message GetTransactionsResponse {
  repeated string transactions = 1;
}

message GetTransactionRequest {
  string hash = 1;
}

message StartMiningRequest {
  string miner_address = 1;
}

message StartMiningResponse {
  bool status = 1;
}

message StopMiningRequest {
  string message = 1;
}

message StopMiningResponse {
  bool status = 1;
}

message GetBalanceRequest {
  string address = 1;
}

message GetBalanceResponse {
  float balance = 1;
}

message GetBlockResponse {
  Header header = 1;
  repeated GetTransactionResponse transactions = 6;
}

message Header {
  string hash             = 1;
  string previous_hash    = 2;
  string merkle_root_hash = 3;
  string target           = 4;
  uint64 nonce            = 5;
  int64  timestamp        = 6;
}

message GetTransactionResponse {
  string id                = 1;
  string sender_address    = 2;
  string recipient_address = 3;
  float amount             = 4;
}